public class A {

	// 개발자가 직접 클래스에 생성자를 만들지 않으면
	// 컴파일러가 아무일도 하지 않는 (객체만 만들어내는 역할을 하는) 기본생성자 (디폴트생성자) 를 만들어낸다.

	// 개발자가 생성자를 직접 만들어 놓았으면 디폴트 생성자는 컴파일러가 만들지 않는다.

	// 생성자의 구조
	// 1) 생성자는 무조건 접근지시 제어자가 """"public""""
	// 이유 : 객체는 항상 클래스 외부에서 만든다.
	// 때문에 private으로 되어 있으면 외부에서 객체를 만들 수가 없다.

	// 2) 생성자의 이름은 항상 클래스의 이름과 똑같다. 반환형이 없다.

	// 3) 일반적인 메소드처럼 매개변수를 지정 할 수 있다.

	// 아래와 같은 형태가 디폴트 생성자 이다.
	// public A(){}

	private int num1 = 0; // 생성자에서 초기화가 되지 않아도 된다.
	private String str1 = ""; // 참조 형태의 자료형에는 null값이 들어가 있다.

	// 보통 생성자에서는 멤버변수의 초기화 및 기타 필요 메소드를 호출하여 객체를 사용할 준비를 완료시킨다.

	public A() {
		System.out.println("A 생성");
		this.num1 = 0;
		this.str1 = "";
	}

	// 생성자에 매개변수가 있는 경우
	// 보통은 멤버변수를 초기화 하기 위한 매개변수가 설정된다.
	// 더 이상 기본 형태의 생성자( new A() )의 호출은 불가능 하다.

	public A(int num1, String str1) {

		this.num1 = num1;
		this.str1 = str1;

		System.out.println("num1 : " + this.num1);
		System.out.println("str1 : " + this.str1);

	}

}
